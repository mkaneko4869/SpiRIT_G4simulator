# Use this open statement to create an OpenGL view:
/vis/open OGL 750x450-0+0
#/vis/open OGLIX

# Disable auto refresh and quieten vis messages whilst scene and
# trajectories are established:
/vis/viewer/set/autoRefresh false
/vis/verbose errors
 
# Draw geometry:
/vis/drawVolume worlds

# Specify view angle:
/vis/viewer/set/viewpointVector -2 1.5 4
/vis/viewer/zoomTo 80
/vis/viewer/set/targetPoint 0 0 0.5 m
/vis/viewer/set/background white ! ! 1.
/vis/viewer/set/hiddenMarker true

# Draw coordinate axes:
/vis/scene/add/axes 5 -1 2 1 m

# Draw smooth trajectories at end of event
/vis/scene/add/trajectories smooth

# To draw only gammas:
/vis/filtering/trajectories/create/particleFilter
#/vis/filtering/trajectories/particleFilter-0/add neutron
#/vis/filtering/trajectories/particleFilter-0/add electron
#/vis/filtering/trajectories/particleFilter-0/add gamma

# To invert the above, drawing all particles except gammas,
# keep the above two lines but also add:
/vis/filtering/trajectories/particleFilter-0/invert true

/vis/ogl/set/displayListLimit 500000

# To superimpose all of the events from a given run:
/vis/scene/endOfEventAction accumulate

# Re-establish auto refreshing and verbosity:
/vis/viewer/set/autoRefresh true

/run/verbose 0
/event/verbose 0
/tracking/verbose 0
/run/beamOn 1
/vis/viewer/flush
